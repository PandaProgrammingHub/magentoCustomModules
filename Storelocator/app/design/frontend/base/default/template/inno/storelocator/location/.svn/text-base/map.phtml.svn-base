<?php $_enableArrows = $this->enableArrows(); ?>
<div class="location-list" id="<?php echo $this->getLocationView() ?>">
    <?php if ($_enableArrows): ?>
        <a id="pre" onclick="movePrev(this);">&laquo;</a> 
    <?php endif; ?>
    <ul class="list" id="location-list">
        <?php $_locations = $this->getLocations(); ?>
        <?php $_count = 0; ?>
        <?php if ($_locations): ?>
            <?php foreach ($_locations as $_location): ?>

                <?php $_count++; ?>
                <?php $_displayAdd = str_replace(',', ',<br/>', $_location->getAddressDisplay()); ?>

                <li <?php if ($_count % 2 != 0): ?> class="odd"<?php endif; ?> onclick='displayLocation(<?php echo $_location->getStoreLatitude(); ?>,<?php echo $_location->getStoreLongitude(); ?>,"<?php echo $_location->getStoreTitle(); ?>",this)'>
                    <div>
                        <p class="store-name"><?php echo $_location->getStoreTitle(); ?></p>
                        <?php echo $_displayAdd; ?>
                        <?php if ($_location->getWebsiteAddress()): ?>
                            <p class="url"><a href="<?php echo $_location->getWebsiteAddress(); ?>" ><?php echo $_location->getWebsiteAddress(); ?></a></p>
                        <?php endif; ?>
                    </div>
                    <div><?php echo $_location->getStorePhone() ?></div>
                    <div class="bold"><?php echo $_location->getStoreEmail(); ?></div>

                </li>

            <?php endforeach; ?>
        <?php endif; ?>
    </ul>    
    <?php if ($_enableArrows): ?>
        <a id="next" onclick="moveNext(this);">&raquo;</a> 
    <?php endif; ?>
</div>
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=true"></script>
<script type="text/javascript">
    // Enable the visual refresh
    google.maps.visualRefresh = true;

    var map;
    var TILE_SIZE = 1000;
    store_location = new google.maps.LatLng(27.506539,-82.714749);
           
    function bound(value, opt_min, opt_max) {
        if (opt_min != null) value = Math.max(value, opt_min);
        if (opt_max != null) value = Math.min(value, opt_max);
        return value;
    }
    function degreesToRadians(deg) {
        return deg * (Math.PI / 180);
    }

    function radiansToDegrees(rad) {
        return rad / (Math.PI / 180);
    }
    /** @constructor */
    function MercatorProjection() {
        this.pixelOrigin_ = new google.maps.Point(TILE_SIZE / 2,
        TILE_SIZE / 2);
        this.pixelsPerLonDegree_ = TILE_SIZE / 360;
        this.pixelsPerLonRadian_ = TILE_SIZE / (2 * Math.PI);
    }

    MercatorProjection.prototype.fromLatLngToPoint = function(latLng,
    opt_point) {
        var me = this;
        var point = opt_point || new google.maps.Point(0, 0);
        var origin = me.pixelOrigin_;

        point.x = origin.x + latLng.lng() * me.pixelsPerLonDegree_;

        // Truncating to 0.9999 effectively limits latitude to 89.189. This is
        // about a third of a tile past the edge of the world tile.
        var siny = bound(Math.sin(degreesToRadians(latLng.lat())), -0.9999,
        0.9999);
        point.y = origin.y + 0.5 * Math.log((1 + siny) / (1 - siny)) *
            -me.pixelsPerLonRadian_;
        return point;
    };
    MercatorProjection.prototype.fromPointToLatLng = function(point) {
        var me = this;
        var origin = me.pixelOrigin_;
        var lng = (point.x - origin.x) / me.pixelsPerLonDegree_;
        var latRadians = (point.y - origin.y) / -me.pixelsPerLonRadian_;
        var lat = radiansToDegrees(2 * Math.atan(Math.exp(latRadians)) -
            Math.PI / 2);
        return new google.maps.LatLng(lat, lng);
    };

    function createInfoWindowContent(storeName) {
        var numTiles = 1 << map.getZoom();
        var projection = new MercatorProjection();
        var worldCoordinate = projection.fromLatLngToPoint(store_location);
        var pixelCoordinate = new google.maps.Point(
        worldCoordinate.x * numTiles,
        worldCoordinate.y * numTiles);
        var tileCoordinate = new google.maps.Point(
        Math.floor(pixelCoordinate.x / TILE_SIZE),
        Math.floor(pixelCoordinate.y / TILE_SIZE));

        return [
            storeName,
                    
        ].join('<br>');
    }
    function initialize(storeName) {
               
        var mapOptions = {
            zoom: <?php echo $this->getMapZoomLevel(); ?>,
            center: store_location,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        map = new google.maps.Map(document.getElementById('map-canvas'),
        mapOptions);
      
        var coordInfoWindow = new google.maps.InfoWindow();
        coordInfoWindow.setContent(createInfoWindowContent(storeName));
        coordInfoWindow.setPosition(store_location);
        coordInfoWindow.open(map);
                
        google.maps.event.addListener(map, 'zoom_changed', function() {
            coordInfoWindow.setContent(createInfoWindowContent(storeName));
            coordInfoWindow.open(map);
        });

    }
    function displayLocation(lat,lng,storeName,obj){
    
        var lis = document.getElementById("location-list").getElementsByTagName("li");
        
        var lis_length = lis.length;
        for(li=0;li<lis_length;li++){
            lis[li].id="";
        }
        obj.id='select';
        store_location = new google.maps.LatLng(lat,lng); 
        initialize(storeName);
        //        27.506539,-82.714749
    }

    //    google.maps.event.addDomListener(window, 'load', initialize);

</script>


<div class="location-frame <?php echo $this->getLocationView() ?>" id="map-canvas">
</div>
<script type="text/javascript">
    lis = document.getElementById("location-list").getElementsByTagName("li");    
    lis[0].click()
    li_length = 0;
    
    
    function moveNext(obj){
        var list_num=4;
        if(obj.parentNode.id=='classic'){
            list_num=3;
        }
        if(lis.length >list_num && (lis.length -li_length)>list_num ){
            lis[li_length].hide();
            li_length++;
        } 
        return;
    }
    function movePrev(obj){      
        if(li_length>0){
            li_length--;
            lis[li_length].show();   
        }
        return;
    }
</script>
